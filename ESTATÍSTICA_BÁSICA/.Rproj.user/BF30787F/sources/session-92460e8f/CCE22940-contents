# Função para distribuição conjunta

dist_conj <- function(data, 
                      vary = "variável distribuída na vertical", 
                      varx = "variável distrubuída na horizontal", 
                      freq = "abolsuta, relativa ou ambas",
                      margin = "0, 1 ou 2") {
  
  # Mensagem de erro nas variáveis de interesse
  if (!(vary %in% names(data)) || !(varx %in% names(data))) {
    stop("As variáveis especificadas não estão presentes nos dados.")
  }
  
  # Mensagem de erro na especificação da frequência
  if (is.null(freq) || !(freq %in% c("abolsuta", "relativa", "ambas"))) {
    stop("Frequência não especificada ou incorreta")
  }
  
  # Mensagem de erro na especificação da margin
  if ((freq %in% c("relativa", "ambas")) &
      (is.null(margin)) ||
      !(margin %in% c(0,1,2))){
    stop("Margin não especificada ou incorreta")
  }
  
  # Cria objetos para a posição das variáveis no data frame
  nomes_colunas <- colnames(data)
  vx <- which(nomes_colunas == varx)
  vy <- which(nomes_colunas == vary)
  
  # Cria uma matrix com a distribuição conjunta em frequência absoluta
  tab <- table(data[[vary]], data[[varx]])
  
  # Cria objetos com os nomes das categorias das variáveis
  rn <- dimnames(tab)[[1]]
  cn <- dimnames(tab)[[2]]
  
  # Cria a tabela com frequências absolutas
  if (freq == "absoluta" &
      any(colnames(data) == varx) &
      any(colnames(data) == vary)) {
    
    # Cria as linhas de totais
    row_total <- apply(tab, MARGIN = 2, FUN = sum)
    col_total <- apply(tab, MARGIN = 1, FUN = sum)
    tab_abs <- rbind(cbind(tab, col_total), c(row_total, sum(row_total)))
    
    # Dá nome às colunas e linhas
    colnames(tab_abs) <- c(cn, "Total")
    rownames(tab_abs) <- c(rn, "Total")
    tab_abs
    
  # Cria a tabela com frequências relativas
  } else if (freq == "relativa" &
             any(colnames(data) == varx) &
             any(colnames(data) == vary)) {
    
    # distribuindo-as em relação ao total geral das variáveis X e Y
    if (margin == 0) {
      
      tabm0 <- tab %>% prop.table()*100
      
      row_total <- apply(tabm0, MARGIN = 2, FUN = sum)
      col_total <- apply(tabm0, MARGIN = 1, FUN = sum)
      tab_rel_0 <- rbind(cbind(tabm0, col_total), c(row_total, sum(row_total)))
      
      tab_rel_0 <- lapply(tab_rel_0, function(x) sprintf("%.1f%%", x)) %>%
        matrix(ncol = dim(tab_rel_0)[2])
      colnames(tab_rel_0) <- c(cn, "Total")
      rownames(tab_rel_0) <- c(rn, "Total")
      tab_rel_0
    
    # distribuindo-as em relação aos totais de cada variável X
    } else if (margin == 1) {
      
      tabm1 <- tab %>% prop.table(margin = 1)*100
      
      col_total <- apply(tabm1, MARGIN = 1, FUN = sum)
      row_total <- table(data[[vx]]) %>% prop.table()*100
      tab_rel_1 <- rbind(cbind(tabm1, col_total), c(row_total, sum(row_total)))
      
      tab_rel_1 <- lapply(tab_rel_1, function(x) sprintf("%.1f%%", x)) %>%
        matrix(ncol = dim(tab_rel_1)[2])
      colnames(tab_rel_1) <- c(cn, "Total")
      rownames(tab_rel_1) <- c(rn, "Total")
      tab_rel_1
      
      # distribuindo-as em relação aos totais de cada variável Y  
    } else if (margin == 2) {
      
      tabm2 <- tab %>% prop.table(margin = 2)*100
      
      row_total <- apply(tabm2, MARGIN = 2, FUN = sum)
      col_total <- table(data[[vy]]) %>% prop.table()*100
      tab_rel_2 <- rbind(cbind(tabm2, col_total), c(row_total, sum(col_total)))
      
      tab_rel_2 <- lapply(tab_rel_2, function(x) sprintf("%.1f%%", x)) %>%
        matrix(ncol = dim(tab_rel_2)[2])
      colnames(tab_rel_2) <- c(cn, "Total")
      rownames(tab_rel_2) <- c(rn, "Total")
      tab_rel_2
      
    }
   
    # Cria a tabela com frequências absolutas e relativas 
  } else if (freq == "ambas" &
             any(colnames(data) == varx) &
             any(colnames(data) == vary)) {
    
    # distribuindo-as as freq relativas em relação ao total geral 
    # das variáveis X e Y
    if (margin == 0) {
      
      # Adiciona linha e coluna com os totais
      # Cria as linhas de totais
      row_total <- apply(tab, MARGIN = 2, FUN = sum)
      col_total <- apply(tab, MARGIN = 1, FUN = sum)
      tab_abs <- rbind(cbind(tab, col_total), c(row_total, sum(col_total)))
      
      colnames(tab_abs) <- c(cn, "Total")
      rownames(tab_abs) <- c(rn, "Total")
      
      tabm0 <- tab %>% prop.table()*100
      
      row_total <- apply(tabm0, MARGIN = 2, FUN = sum)
      col_total <- apply(tabm0, MARGIN = 1, FUN = sum)
      tab_rel_0 <- rbind(cbind(tabm0, col_total), c(row_total, sum(col_total)))
      
      tab_rel_0 <- lapply(tab_rel_0, function(x) sprintf("%.1f%%", x))
      
      tab_abs_rel_0 <- purrr::map2(tab_abs, tab_rel_0, ~paste0(.x, "(", .y, "%)")) %>%
        matrix(ncol = dim(tab_abs)[2])
      colnames(tab_abs_rel_0) <- c(cn, "Total")
      rownames(tab_abs_rel_0) <- c(rn, "Total")
      tab_abs_rel_0
    
      # distribuindo-as as freq relativas em relação ao total de cada
      # categora da variáveis X  
    } else if (margin == 1) {
      
      # Adiciona linha e coluna com os totais
      row_total <- apply(tab, MARGIN = 2, FUN = sum)
      col_total <- apply(tab, MARGIN = 1, FUN = sum)
      tab_abs <- rbind(cbind(tab, col_total), c(row_total, sum(col_total)))
      
      colnames(tab_abs) <- c(cn, "Total")
      rownames(tab_abs) <- c(rn, "Total")
      
      tabm1 <- tab %>% prop.table(margin = 1)*100
      
      col_total <- apply(tabm1, MARGIN = 1, FUN = sum)
      row_total <- table(data[[vx]]) %>% prop.table()*100
      tab_rel_1 <- rbind(cbind(tabm1, col_total), c(row_total, sum(row_total)))
      
      tab_rel_1 <- lapply(tab_rel_1, function(x) sprintf("%.1f%%", x))
      
      tab_abs_rel_1 <- purrr::map2(tab_abs, tab_rel_1, ~paste0(.x, "(", .y, "%)")) %>%
        matrix(ncol = dim(tab_abs)[2])
      colnames(tab_abs_rel_1) <- c(cn, "Total")
      rownames(tab_abs_rel_1) <- c(rn, "Total")
      tab_abs_rel_1
      
      # distribuindo-as as freq relativas em relação ao total de cada
      # categora da variáveis Y  
    } else if (margin == 2) {
      
      # Adiciona linha e coluna com os totais
      row_total <- apply(tab, MARGIN = 2, FUN = sum)
      col_total <- apply(tab, MARGIN = 1, FUN = sum)
      tab_abs <- rbind(cbind(tab, col_total), c(row_total, sum(col_total)))
      
      colnames(tab_abs) <- c(cn, "Total")
      rownames(tab_abs) <- c(rn, "Total")
      
      tabm2 <- tab %>% prop.table(margin = 2)*100
      
      row_total <- apply(tabm2, MARGIN = 2, FUN = sum)
      col_total <- table(data[[vy]]) %>% prop.table()*100
      tab_rel_2 <- rbind(cbind(tabm2, col_total), c(row_total, sum(col_total)))
      
      tab_rel_2 <- lapply(tab_rel_2, function(x) sprintf("%.1f%%", x))
      
      tab_abs_rel_2 <- purrr::map2(tab_abs, tab_rel_2, ~paste0(.x, "(", .y, "%)")) %>%
        matrix(ncol = dim(tab_abs)[2])
      colnames(tab_abs_rel_2) <- c(cn, "Total")
      rownames(tab_abs_rel_2) <- c(rn, "Total")
      tab_abs_rel_2
      
    }
  }
}

